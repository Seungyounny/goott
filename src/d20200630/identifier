+ 식별자 (Identifier)

1) primitive type (원시타입)
(정수형) : byte(8bit), short(16bit), int(32bit), long(64bit)
(실수형) :              			  float(32bit), double(64bit)
(문자형) :             char(2byte)
(논리형) : boolean(참, 거짓)



2) reference type (참조타입) : class, interface, array ...

> 저장 단위
0 | 1 => 1 bit
8 bit => 1 byte (*1024) => 1kb(*1024) => 1MB(*1024) => 1GB(*1024) => 1TB(*1024) => 1PT ...

+ OOP (Objected Oriented Programming) : 객체 지향 프로그램
     ----- -----
       객체(사물,대상) 지향 => 사물 또는 대상이 지닌 특성이나 행위(행동) 등을 
                   프로그래밍으로 그대로 실체화하고자 하는데 그 목적
                   
  ex) 자동차								클래스
  --------
    바퀴
    엔진
    제조사			특성, 성질					멤버 변수 ( 필드 ) 
    차량명
  --------								생성자 (실질적으로 만들으라고 하는 것.) 
   전진
   후진			행위 ( 행동 )				멤버 메소드
   정지
   
  실체화 : new  ==> 인스턴스(instance)화
  			 ==> 변수가 메모리에 올라가 있는 상태
  			  ex) 제조사 정보 ?
  			  		s.o.p(car.제조사);
  > 클래스 
  : 하나의 클래스는 메모리 할당 시 다양한 값을 가지게 되며 객체라고 부릅니다.
  : 하나의 객체는 독립적으로 사용됩니다. 